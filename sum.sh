#!/usr/local/bin/bash

# 名前
# sum.sh - 数値の合計を計算する
#
# 書式
# sum.sh NUMBER...
#
# 説明
#
# 引数で指定したすべての数字の合計値を標準出力に出力する        
# 指定できる数値は整数(0または負の値も含む)。小数は指定できない


# スクリプトのファイル名を取り出して変数に代入
# $0変数にはコマンドとして指定した名前が入っている。
# エラーメセs-じを出力するときなどにこのシェルスクリプト自身のファイル名を使用したい。
# $0変数の値はsum.shのような単独のファイル名とは限らず、ユーザーが./sum.shや/usr/bin/sum.shのようなパスの形式で実行していればその値がそのまま入っている
# 実施には$0変数の値から末尾のファイル名のみ取り出して使用したいので、パラメータ展開の機能を使って文字列の先頭から/までを削除している。
# ##と指定しているので、/が複数含まれていた場合は最後の/までが削除される。
# また、シェルスクリプト名は途中で変更されることはない。誤解を避けるためにreadonlyにする。

readonly SCRIPT_NAME=${0##*/}

# 合計値格納用変数
result=0

for number in "$@"
do
  # [[]]の中で=~ 右辺を拡張正規表現とみなして左辺がそれにマッチするかどうかを判定する
  # 先頭にマイナス符号がついた数字の連続のみ許容したいので^-?[0-9]+$という正規表現を使用。
  if [[ ! $number =~ ^-?[0-9]+$ ]]; then
    printf '%s\n' "${SCRIPT_NAME}: '$number': non-integer number" 1>&2
    exit 1
  fi

  ((result+=number))
done

printf '%s\n' "$result"
